auto zip = make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 0, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 1, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 2, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 3, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 4, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 5, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 6, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 7, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 8, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 9, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 10, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 11, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 12, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 13, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 14, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 15, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 16, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 17, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 18, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 19, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 20, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 21, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 22, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 23, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 24, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 25, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 26, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 27, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 28, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 29, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 30, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 31, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 32, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 33, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 34, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 35, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 36, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 37, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 38, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 39, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 40, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 41, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 42, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 43, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 44, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 45, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 46, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 47, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 48, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 49, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 50, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 51, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 52, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 53, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 54, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 55, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 56, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 57, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 58, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 59, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 60, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 61, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 62, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 63, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 64, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 65, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 66, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 67, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 68, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 69, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 70, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 71, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 72, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 73, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 74, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 75, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 76, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 77, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 78, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.begin()) + 79, make_transform_iterator(counting_iterator<int>(0), 80*_1)))))))), make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 0, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 1, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 2, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 3, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 4, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 5, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 6, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 7, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 8, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 9, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 10, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 11, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 12, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 13, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 14, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 15, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 16, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 17, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 18, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 19, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 20, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 21, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 22, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 23, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 24, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 25, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 26, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 27, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 28, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 29, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 30, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 31, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 32, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 33, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 34, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 35, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 36, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 37, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 38, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 39, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 40, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 41, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 42, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 43, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 44, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 45, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 46, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 47, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 48, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 49, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 50, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 51, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 52, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 53, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 54, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 55, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 56, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 57, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 58, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 59, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 60, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 61, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 62, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 63, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 64, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 65, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 66, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 67, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 68, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 69, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 70, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 71, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 72, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 73, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 74, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 75, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 76, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 77, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 78, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.begin()) + 79, make_transform_iterator(counting_iterator<int>(0), 80*_1)))))))), make_zip_iterator(make_tuple(U0.begin(), U0p.begin())), make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.begin()) + 0, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.begin()) + 1, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.begin()) + 2, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.begin()) + 3, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.begin()) + 4, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.begin()) + 5, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.begin()) + 6, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.begin()) + 7, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.begin()) + 8, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.begin()) + 9, make_transform_iterator(counting_iterator<int>(0), 10*_1)))))), make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(J.begin(), perm.begin()) + 0, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(J.begin(), perm.begin()) + 1, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(J.begin(), perm.begin()) + 2, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(J.begin(), perm.begin()) + 3, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(J.begin(), perm.begin()) + 4, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(J.begin(), perm.begin()) + 5, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(J.begin(), perm.begin()) + 6, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(J.begin(), perm.begin()) + 7, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(J.begin(), perm.begin()) + 8, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(J.begin(), perm.begin()) + 9, make_transform_iterator(counting_iterator<int>(0), 10*_1)))))), make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.begin()) + 0, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.begin()) + 1, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.begin()) + 2, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.begin()) + 3, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.begin()) + 4, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.begin()) + 5, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.begin()) + 6, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.begin()) + 7, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.begin()) + 8, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.begin()) + 9, make_transform_iterator(counting_iterator<int>(0), 10*_1)))))))), mu.begin(), make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.begin()) + 0, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.begin()) + 1, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.begin()) + 2, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.begin()) + 3, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.begin()) + 4, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.begin()) + 5, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.begin()) + 6, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.begin()) + 7, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.begin()) + 8, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.begin()) + 9, make_transform_iterator(counting_iterator<int>(0), 10*_1)))))), make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.begin()) + 0, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.begin()) + 1, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.begin()) + 2, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.begin()) + 3, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.begin()) + 4, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.begin()) + 5, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.begin()) + 6, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.begin()) + 7, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.begin()) + 8, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.begin()) + 9, make_transform_iterator(counting_iterator<int>(0), 10*_1)))))), make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.begin()) + 0, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.begin()) + 1, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.begin()) + 2, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.begin()) + 3, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.begin()) + 4, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.begin()) + 5, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.begin()) + 6, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.begin()) + 7, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.begin()) + 8, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.begin()) + 9, make_transform_iterator(counting_iterator<int>(0), 10*_1)))))), H.begin()));
auto zipend = make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 0, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 1, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 2, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 3, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 4, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 5, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 6, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 7, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 8, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 9, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 10, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 11, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 12, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 13, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 14, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 15, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 16, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 17, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 18, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 19, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 20, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 21, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 22, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 23, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 24, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 25, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 26, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 27, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 28, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 29, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 30, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 31, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 32, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 33, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 34, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 35, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 36, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 37, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 38, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 39, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 40, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 41, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 42, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 43, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 44, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 45, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 46, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 47, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 48, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 49, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 50, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 51, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 52, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 53, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 54, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 55, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 56, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 57, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 58, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 59, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 60, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 61, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 62, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 63, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 64, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 65, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 66, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 67, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 68, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 69, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 70, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 71, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 72, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 73, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 74, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 75, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 76, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 77, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 78, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(fc.begin(), fperm.end()) + 79, make_transform_iterator(counting_iterator<int>(0), 80*_1)))))))), make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 0, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 1, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 2, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 3, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 4, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 5, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 6, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 7, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 8, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 9, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 10, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 11, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 12, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 13, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 14, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 15, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 16, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 17, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 18, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 19, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 20, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 21, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 22, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 23, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 24, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 25, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 26, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 27, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 28, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 29, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 30, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 31, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 32, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 33, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 34, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 35, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 36, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 37, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 38, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 39, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 40, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 41, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 42, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 43, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 44, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 45, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 46, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 47, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 48, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 49, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 50, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 51, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 52, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 53, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 54, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 55, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 56, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 57, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 58, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 59, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 60, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 61, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 62, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 63, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 64, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 65, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 66, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 67, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 68, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 69, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 70, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 71, make_transform_iterator(counting_iterator<int>(0), 80*_1)))), make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 72, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 73, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 74, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 75, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 76, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 77, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 78, make_transform_iterator(counting_iterator<int>(0), 80*_1)), make_permutation_iterator(make_permutation_iterator(f.begin(), fperm.end()) + 79, make_transform_iterator(counting_iterator<int>(0), 80*_1)))))))), make_zip_iterator(make_tuple(U0.end(), U0p.end())), make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.end()) + 0, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.end()) + 1, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.end()) + 2, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.end()) + 3, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.end()) + 4, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.end()) + 5, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.end()) + 6, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.end()) + 7, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.end()) + 8, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(dU.begin(), perm.end()) + 9, make_transform_iterator(counting_iterator<int>(0), 10*_1)))))), make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(J.begin(), perm.end()) + 0, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(J.begin(), perm.end()) + 1, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(J.begin(), perm.end()) + 2, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(J.begin(), perm.end()) + 3, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(J.begin(), perm.end()) + 4, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(J.begin(), perm.end()) + 5, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(J.begin(), perm.end()) + 6, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(J.begin(), perm.end()) + 7, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(J.begin(), perm.end()) + 8, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(J.begin(), perm.end()) + 9, make_transform_iterator(counting_iterator<int>(0), 10*_1)))))), make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.end()) + 0, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.end()) + 1, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.end()) + 2, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.end()) + 3, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.end()) + 4, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.end()) + 5, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.end()) + 6, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.end()) + 7, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.end()) + 8, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(Jp.begin(), perm.end()) + 9, make_transform_iterator(counting_iterator<int>(0), 10*_1)))))))), mu.end(), make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.end()) + 0, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.end()) + 1, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.end()) + 2, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.end()) + 3, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.end()) + 4, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.end()) + 5, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.end()) + 6, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.end()) + 7, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.end()) + 8, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm1.begin(), perm.end()) + 9, make_transform_iterator(counting_iterator<int>(0), 10*_1)))))), make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.end()) + 0, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.end()) + 1, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.end()) + 2, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.end()) + 3, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.end()) + 4, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.end()) + 5, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.end()) + 6, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.end()) + 7, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.end()) + 8, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm2.begin(), perm.end()) + 9, make_transform_iterator(counting_iterator<int>(0), 10*_1)))))), make_zip_iterator(make_tuple(make_zip_iterator(make_tuple(make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.end()) + 0, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.end()) + 1, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.end()) + 2, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.end()) + 3, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.end()) + 4, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.end()) + 5, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.end()) + 6, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.end()) + 7, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.end()) + 8, make_transform_iterator(counting_iterator<int>(0), 10*_1)), make_permutation_iterator(make_permutation_iterator(norm3.begin(), perm.end()) + 9, make_transform_iterator(counting_iterator<int>(0), 10*_1)))))), H.end()));
